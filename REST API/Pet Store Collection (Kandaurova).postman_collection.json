{
	"info": {
		"_postman_id": "9af881b5-8389-4ecf-8cfc-8870271075f7",
		"name": "Pet Store Collection (Kandaurova)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40597513"
	},
	"item": [
		{
			"name": "Create pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomName = pm.variables.replaceIn('{{$randomFirstName}}');",
							"pm.collectionVariables.set(\"petName\",pm.variables.replaceIn('{{$randomFirstName}}'));",
							"",
							"var randomPetId = pm.variables.replaceIn('{{$randomInt}}');",
							"pm.collectionVariables.set(\"petId\", parseInt(randomPetId));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Name is set correctly\", function () {    ",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"petName\"));",
							"});",
							"",
							"pm.test(\"Id is equal to initial\", function() {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"petId\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{petId}},\n    \"name\": \"{{petName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/pet",
					"host": [
						"{{host}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get pet by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Name is set correctly\", function () {    ",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"petName\"));",
							"});",
							"",
							"pm.test(\"Id is equal to initial\", function() {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"petId\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/pet/{{petId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var petName = pm.collectionVariables.get(\"petName\");",
							"var petOwner = pm.variables.replaceIn('{{$randomFirstName}}');",
							"pm.collectionVariables.set(\"updatedPetName\", petOwner + \"'s pet \" + petName);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Updated name is set correctly\", function () {    ",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"updatedPetName\"));",
							"});",
							"",
							"pm.test(\"Id is equal to initial\", function() {",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"petId\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": {{petId}},\n  \"name\": \"{{updatedPetName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/pet",
					"host": [
						"{{host}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/pet/{{petId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "",
			"type": "default"
		},
		{
			"key": "petName",
			"value": ""
		},
		{
			"key": "petId",
			"value": ""
		},
		{
			"key": "api-key",
			"value": "",
			"type": "default"
		},
		{
			"key": "updatedPetName",
			"value": ""
		}
	]
}